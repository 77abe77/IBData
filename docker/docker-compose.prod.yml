version: "2.1"
services:
  mysql:
    container_name: mysql
    image: mysql:5.7.19
    restart: always
    env_file:
      - ${PWD}/docker/prod-env.rc
    healthcheck:
      test: "mysqladmin ping -c2 -h localhost"
      interval: 10s
      timeout: 10s
      retries: 30
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
    volumes:
      - mysql:/var/lib/mysql

  create-db:
    depends_on:
      mysql:
        condition: service_healthy
    image: mysql:5.7.19
    env_file:
      - ${PWD}/docker/prod-env.rc
    volumes:
      - ${PWD}/docker/create-db.sh:/create-db.sh
    command: /create-db.sh

  migrations:
    depends_on:
      - create-db
    image: ${REGISTRY}:master
    env_file:
      - ${PWD}/docker/prod-env.rc
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
    links:
      - mysql
    stdin_open: true
    tty: true
    command: ./manage.py db upgrade

  stock-data:
    depends_on:
      - migrations
    expose:
      - 5000
    container_name: ${DOCKER_CONTAINER}
    image: ${REGISTRY}:master
    env_file:
      - ${PWD}/docker/prod-env.rc
    stdin_open: true
    tty: true
    command: ./manage.py run_production_server

volumes:
  mysql:
    name: mysql

networks:
  default:
    external:
      name: spartanio-network
